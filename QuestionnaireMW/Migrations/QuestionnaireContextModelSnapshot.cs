// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuestionnaireMW.Context;

namespace QuestionnaireMW.Migrations
{
    [DbContext(typeof(QuestionnaireContext))]
    partial class QuestionnaireContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("QuestionnaireMW.Models.AnswerResponse", b =>
                {
                    b.Property<int>("ResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("UserResponseCount")
                        .HasColumnType("int");

                    b.Property<string>("ans1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ans10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ans11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ans12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ans13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ans14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ans15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ans16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ans17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ans18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ans2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ans3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ans4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ans5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ans6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ans7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ans8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ans9")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResponseId");

                    b.HasIndex("UserId");

                    b.ToTable("AnswerResponses");
                });

            modelBuilder.Entity("QuestionnaireMW.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserFName")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("UserLName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserMobileNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserResponseCount")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("UserEmail")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("QuestionnaireMW.Models.AnswerResponse", b =>
                {
                    b.HasOne("QuestionnaireMW.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
